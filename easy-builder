#! /usr/bin/env bash

# This script is meant to be kept small and simple
# If you think about adding features, it's probably a bad idea

set -e # exit if a command fails
set -o pipefail # Will return the exit status of make if it fails

project_source_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

build_dir="${project_source_dir}/build${SUBDIR:+/${SUBDIR}}"
install_dir="${project_source_dir}/install${SUBDIR:+/${SUBDIR}}"

install_target='install/strip'
build_type='Release'

_job_count=4

_nproc () {
	if command -v 'nproc' >/dev/null
	then
		nproc
	else
		case "$(uname -s)" in
			'Linux')
				egrep "^processor" /proc/cpuinfo | wc -l
				;;
			'FreeBSD'|'Darwin')
				sysctl -n hw.ncpu
				;;
			'MSYS_NT-'*|'CYGWIN_NT-'*|'MINGW'*'_NT-'*)
				if command -v 'wmic' >/dev/null
				then
					wmic cpu get NumberOfLogicalProcessors/Format:List \
						| grep -m1 '=' | cut -f2 -d'='
				else
					echo "${NUMBER_OF_PROCESSORS:-${_job_count}}"
				fi
				;;
			*)
				echo "${_job_count}"
				;;
		esac
	fi
}

job_count="$(_nproc)" 2>/dev/null
job_count="${job_count:-${_job_count}}"

declare -a cmake_user_opts
while [ ! -z "${1}" ]
do
	case "${1}" in
	'-j'*)
		job_count="${1:2}"
		shift
		;;
	'--debug')
		install_target='install'
		build_type='Debug'
		shift
		;;
	*)
	cmake_user_opts[${#cmake_user_opts[@]}]="${1}"
	shift
		;;
	esac
done

declare -a fetch_submodules_cmd
for submodule_file in 'libs/crunch/inc/crn_decomp.h' \
	'tools/unvanquished/daemonmap/tools/quake3/q3map2/main.c'
do
	if ! [ -f "${project_source_dir}/${submodule_file}" ]
	then
		fetch_submodules_cmd=(git -C "${project_source_dir}" submodule update --init --recursive)
	fi
done

set -x

"${fetch_submodules_cmd[@]}"

mkdir -pv "${build_dir}"
cd "${build_dir}"

cmake \
	-G'Unix Makefiles' \
	-D'CMAKE_INSTALL_PREFIX'="${install_dir}" \
	-D'CMAKE_BUILD_TYPE'="${build_type}" \
	"${cmake_user_opts[@]}" \
	"${project_source_dir}"

cmake \
	--build "${build_dir}" \
	-- \
	-j"${job_count}" \
	"${install_target}"
